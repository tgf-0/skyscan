// Attempt at a realtime version with continuous scanning.
// Requires 3 Nav Recievers
// Controls receiver, scanning and storing coordinates.
// Nav receivers should be on `frequency:1` and `listenangle:180`
// Nav receivers should rename message field to nsig, esig and wsig
// Nav receivers should rename SignalStrength fields to nss, ess and wss
// Nav receivers should add values of TargetMessage to "origin_north", "origin_east", and "origin_west"
// A Text Panel with device field `:Location`
// Do not run SkyScan-Display.yolol concurrently, this script will handle its own display.
// Memory chip must be default named (`ChipField1`, `ChipField2`, etc)
// - CF1 is Origin North
// - CF2 is Origin East
// - CF3 is Origin West
// - CF4 is Scan index (for matching coords to a scan run)
// If running locmark.yolol:
// - CF5 is Saved Location 1 Origin North
// - CF6 is Saved Location 1 Origin East
// - CF7 is Saved Location 1 Origin West
// - CF8 is Saved Location 2 Origin North
// - CF9 is Saved Location 2 Origin East
// - CF10 is Saved Location 2 Origin West
// [Optional] A text panel `NavStatus` for additional scan info

// Realtime is inaccurate with a single receiver because of how slow YOLOL chips are.
// Apparently a signal can be lost or another signal found before the a signal's signalstrength can be captured

ORIGIN_N="origin_north"
ORIGIN_E="origin_east"
ORIGIN_W="origin_west"

macro display(cf1, cf2, cf3) line
	:location="\n"+cf1+"\n"+cf2+"\n"+cf3
end

macro statusUpdate(m) line
	:navstatus="Scanning..\n"+m+" found"
end

macro getDist(sigs) line
	sigs=(1000000 - sigs)/1000
end


// If not active, reset
if :skyscan==0 then
	:navstatus="Inactive"
	:location="Inactive"
	nf=0
	ef=0
	wf=0
	:chipfield1=0
	:chipfield2=0
	:chipfield3=0
end

// :turretrotation+=45
// if :turretrotation>360 then :turretrotation=0 end

while :skyscan==1 do 
	:navstatus="Scanning.."
	m=:message
	sigs=0
	display(:chipfield1,:chipfield2,:chipfield3)

	// Get signal strength from each receiver and store it periodically
	if :nss!=0 then 
		// getDist(:nss)
		:chipfield1=(1000000 - :nss)/1000
	end
	if :ess!=0 then 
		// getDist(:ess)
		:chipfield2=(1000000 - :ess)/1000
	end
	if :wss!=0 then 
		// getDist(:wss)
		:chipfield3=(1000000 - :wss)/1000
	end

end